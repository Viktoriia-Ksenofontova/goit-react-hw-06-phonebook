{"version":3,"sources":["Components/Contacts/ContactsList.module.css","Components/Section/Section.module.css","Components/Filter/Filter.module.css","redux/contacts/contacts-actions.js","Components/ContactForm/ContactForm.jsx","Components/Contacts/ContactsList.jsx","Components/Section/Section.jsx","Components/Filter/Filter.jsx","App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js","Components/ContactForm/ContactForm.module.css"],"names":["module","exports","addContact","createAction","data","payload","id","uuidv4","name","number","deleteContact","changeFilter","ContactForm","state","nameInputId","numberInputId","handleInputChange","e","target","value","setState","handleSubmit","preventDefault","props","items","formSubmitHandler","find","item","toast","info","position","POSITION","TOP_CENTER","warn","reset","this","onSubmit","className","styles","form","htmlFor","formLabel","formInput","type","placeholder","onChange","formBtn","Component","defaultProps","connect","contacts","dispatch","contactsActions","ContactList","onDeleteContact","length","contactsList","map","listItem","Btn","onClick","getVisibleContacts","allContacts","filter","normalizedFilter","toLowerCase","contact","includes","Section","title","children","section","sectionTitle","searchInputId","Filter","filterLabel","filterInput","App","createReducer","actions","action","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","contactsReducer","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.7da25f01.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsList\":\"ContactsList_contactsList__1bB4x\",\"listItem\":\"ContactsList_listItem__2ajSY\",\"Btn\":\"ContactsList_Btn__24rv3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__3Aztj\",\"sectionTitle\":\"Section_sectionTitle__swCr6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterLabel\":\"Filter_filterLabel__2mJFg\",\"filterInput\":\"Filter_filterInput__24tu7\"};","import { createAction } from '@reduxjs/toolkit';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst addContact = createAction('contacts/add', data => ({\n  payload: {\n    id: uuidv4(),\n    name: data.name,\n    number: data.number,\n  },\n}));\n\nconst deleteContact = createAction('contacts/delete');\n\nconst changeFilter = createAction('contacts/changeFilter');\n\nexport default { addContact, deleteContact, changeFilter };\n","import { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport styles from './ContactForm.module.css';\nimport { connect } from 'react-redux';\nimport contactsActions from '../../redux/contacts/contacts-actions';\nimport { ToastContainer, toast } from 'react-toastify';\nimport PropTypes from 'prop-types';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  nameInputId = uuidv4();\n  numberInputId = uuidv4();\n\n  handleInputChange = e => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { name, number } = this.state;\n    const { items, formSubmitHandler } = this.props;\n\n    if (items.find(item => item.name === name)) {\n      return toast.info(`${name} is already in contacts.`, {\n        position: toast.POSITION.TOP_CENTER,\n      });\n    } else if (name === '' || number === '') {\n      return toast.warn(`All fields must be filled.`, {\n        position: toast.POSITION.TOP_CENTER,\n      });\n    }\n\n    formSubmitHandler(this.state);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    const { name, number } = this.state;\n\n    return (\n      <form onSubmit={this.handleSubmit} className={styles.form}>\n        <label htmlFor={this.nameInputId} className={styles.formLabel}>\n          Name\n          <input\n            className={styles.formInput}\n            type=\"text\"\n            placeholder=\"Enter name\"\n            name=\"name\"\n            value={name}\n            onChange={this.handleInputChange}\n            id={this.nameInputId}\n          />\n        </label>\n\n        <label htmlFor={this.numberInputId} className={styles.formLabel}>\n          Number\n          <input\n            className={styles.formInput}\n            type=\"tel\"\n            placeholder=\"Enter telephone number\"\n            name=\"number\"\n            value={number}\n            onChange={this.handleInputChange}\n            id={this.numberInputId}\n          />\n        </label>\n        <button type=\"submit\" className={styles.formBtn}>\n          Add contact\n        </button>\n        <ToastContainer />\n      </form>\n    );\n  }\n}\n\nContactForm.defaultProps = {\n  items: [],\n};\n\nContactForm.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.shape),\n  formSubmitHandler: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  items: state.contacts.items,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  formSubmitHandler: data => dispatch(contactsActions.addContact(data)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import React from 'react';\nimport styles from './ContactsList.module.css';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport contactsActions from '../../redux/contacts/contacts-actions';\n\nconst ContactList = ({ contacts, onDeleteContact }) =>\n  contacts.length > 0 ? (\n    <ul className={styles.contactsList}>\n      {contacts.map(({ id, name, number }) => (\n        <li key={id} className={styles.listItem}>\n          <p className=\"name\">\n            {name}: <span>{number}</span>\n          </p>\n          <button\n            className={styles.Btn}\n            type=\"button\"\n            onClick={() => onDeleteContact(id)}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  ) : (\n    <h3>You haven't contacts</h3>\n  );\n\nContactList.defaultProps = {\n  contacts: [],\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.shape),\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nconst getVisibleContacts = (allContacts, filter) => {\n  const normalizedFilter = filter.toLowerCase();\n  return allContacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter),\n  );\n};\n\nconst mapStateToProps = state => ({\n  contacts: getVisibleContacts(state.contacts.items, state.contacts.filter),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onDeleteContact: id => dispatch(contactsActions.deleteContact(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Section.module.css';\n\nconst Section = ({ title, children }) => (\n  <div className={styles.section}>\n    <h2 className={styles.sectionTitle}>{title}</h2>\n    {children}\n  </div>\n);\n\nSection.defaultProps = {\n  title: '',\n};\n\nSection.propTypes = {\n  children: PropTypes.node,\n  title: PropTypes.string,\n};\n\nexport default Section;\n","import { v4 as uuidv4 } from 'uuid';\nimport styles from './Filter.module.css';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport contactsActions from '../../redux/contacts/contacts-actions';\n\nconst searchInputId = uuidv4();\nconst Filter = ({ value, onChange }) => (\n  <>\n    <label htmlFor={searchInputId} className={styles.filterLabel}>\n      Find contacts by name\n      <input\n        className={styles.filterInput}\n        type=\"text\"\n        name=\"filter\"\n        value={value}\n        onChange={onChange}\n        id={searchInputId}\n      />\n    </label>\n  </>\n);\n\nFilter.defaultProps = {\n  value: '',\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  value: state.contacts.filter,\n});\nconst mapDispatchToProps = dispatch => ({\n  onChange: e => dispatch(contactsActions.changeFilter(e.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import { Component } from 'react';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './App.css';\nimport ContactForm from './Components/ContactForm';\nimport ContactList from './Components/Contacts/ContactsList';\nimport Section from './Components/Section';\nimport Filter from './Components/Filter';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Section title=\"Phonebook\">\n          <ContactForm />\n        </Section>\n\n        <Section title=\"Contacts\">\n          <Filter />\n          <ContactList />\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport actions from './contacts-actions';\n\nconst items = createReducer([], {\n  [actions.addContact]: (state, action) => [...state, action.payload],\n  [actions.deleteContact]: (state, action) =>\n    state.filter(contact => contact.id !== action.payload),\n});\n\nconst filter = createReducer('', {\n  [actions.changeFilter]: (_, action) => action.payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport contactsReducer from './contacts/contacts-reducer';\nimport logger from 'redux-logger';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst contactsPersistConfig = {\n  key: 'contacts',\n  storage,\n  blacklist: ['filter'],\n};\n\nconst store = configureStore({\n  reducer: {\n    contacts: persistReducer(contactsPersistConfig, contactsReducer),\n  },\n  middleware,\n});\n\nconst persistor = persistStore(store);\n\nexport default { store, persistor };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__bu7-V\",\"formLabel\":\"ContactForm_formLabel__3DJu-\",\"formInput\":\"ContactForm_formInput__1R9uP\",\"formBtn\":\"ContactForm_formBtn__1eruk\"};"],"sourceRoot":""}